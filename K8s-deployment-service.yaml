apiVersion: apps/v1
kind: Deployment
metadata:
  name: app1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app1
  template:
    metadata:
      labels:
        app: app1
    spec:
      containers:
        - name: app1
          image: jtdocker2000/myimage:latest
          #command: ["/bin/bash", "-c", "/app/script.sh; tail -f /dev/null"] #uncomment this if you want the container to stay alive
          # ports:
          #   - containerPort: 9000 

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app2
  template:
    metadata:
      labels:
        app: app2
    spec:
      containers:
        - name: app2
          image: jtdocker2000/myimage:latest
          #command: ["/bin/bash", "-c", "/app/script.sh; tail -f /dev/null"]
          # ports:
          #   - containerPort: 9000 

---
apiVersion: v1
kind: Service
metadata:
  name: app1-service
spec:
  selector:
    app: app1
  ports:
    - protocol: TCP
      port: 9000  # Port on which the service is exposed
      targetPort: 9000  # Port in the container
  type: ClusterIP  # Default type. This exposes the service on a cluster-internal IP

---
apiVersion: v1
kind: Service
metadata:
  name: app2-service
spec:
  selector:
    app: app2
  ports:
    - protocol: TCP
      port: 9001  
      targetPort: 9000  
  type: ClusterIP  
